services:
  hajimi-king:
    build:
      context: .
      dockerfile: Dockerfile
      cache_from:
        - hajimi-king:latest
    image: hajimi-king:latest
    container_name: hajimi-king
    restart: unless-stopped
    
    # 资源限制
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M
    
    # 环境变量
    env_file:
      - .env
    environment:
      # 覆盖或添加额外的环境变量
      - PYTHONUNBUFFERED=1
      - TZ=Asia/Shanghai
      # 性能优化设置
      - HAJIMI_MAX_WORKERS=10
      - HAJIMI_BATCH_SIZE=10
      - HAJIMI_BATCH_INTERVAL=60
    
    # 数据卷挂载
    volumes:
      - ./data:/app/data:rw
      - ./logs:/app/logs:rw
      - queries-cache:/app/data/cache
    
    # 日志配置
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=hajimi-king"
    
    # 健康检查
    healthcheck:
      test: ["CMD", "pgrep", "-f", "api_key_scanner"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # 网络配置
    networks:
      - hajimi-network
    
    # 安全设置
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
    
    # 标签（用于监控和管理）
    labels:
      - "com.hajimi.description=Hajimi King API Key Scanner"
      - "com.hajimi.version=0.0.1-beta"
      - "com.hajimi.maintainer=your-email@example.com"

  # 方案1：使用官方的 Cloudflare WARP 镜像
  warp-proxy-official:
    image: caomingjun/warp:latest
    container_name: warp-proxy
    restart: unless-stopped
    ports:
      - "127.0.0.1:1080:1080"
    environment:
      - WARP_SLEEP=2
    cap_add:
      - NET_ADMIN
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=0
      - net.ipv4.conf.all.src_valid_mark=1
    networks:
      - hajimi-network
    profiles:
      - proxy
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  # 方案2：使用 e7h4n/cloudflare-warp 镜像（备选）
  warp-proxy-alternative:
    image: e7h4n/cloudflare-warp:latest
    container_name: warp-proxy-alt
    restart: unless-stopped
    ports:
      - "127.0.0.1:1081:1080"
    cap_add:
      - NET_ADMIN
    networks:
      - hajimi-network
    profiles:
      - proxy-alt
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  # 方案3：使用通用的 SOCKS5 代理
  socks5-proxy:
    image: serjs/go-socks5-proxy:latest
    container_name: socks5-proxy
    restart: unless-stopped
    ports:
      - "127.0.0.1:1082:1080"
    environment:
      - PROXY_USER=
      - PROXY_PASSWORD=
    networks:
      - hajimi-network
    profiles:
      - socks5
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 128M

# 网络定义
networks:
  hajimi-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16

# 命名卷
volumes:
  queries-cache:
    driver: local